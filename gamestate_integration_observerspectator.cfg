"Observer"
{
  "uri"        "http://127.0.0.1:8080/gsi-feed" // Game will be making POST requests to this uri. If the endpoint needs traffic to be encrypted in flight then it is recommended to specify a secure uri and use SSL on the service end. Steam client will automatically use SSL and validate endpoint certificate for https destinations.
  "timeout"    "5.0" // Game expects an HTTP 2XX response code from its HTTP POST request, and game will not attempt submitting the next HTTP POST request while a previous request is still in flight. The game will consider the request as timed out if a response is not received within so many seconds, and will re-heartbeat next time with full state omitting any delta-computation. If the setting is not specified then default short timeout of 1.1 sec will be used.
  "buffer"     "0.1" // Because multiple game events tend to occur one after another very quickly, it is recommended to specify a non-zero buffer. When buffering is enabled, the game will collect events for so many seconds to report a bigger delta. For localhost service integration this is less of an issue and can be tuned to match the needs of the service or set to 0.0 to disable buffering completely. If the setting is not specified then default buffer of 0.1 sec will be used.
  "throttle"   "0.1" // For high-traffic endpoints this setting will make the game client not send another request for at least this many seconds after receiving previous HTTP 2XX response to avoid notifying the service when game state changes too frequently. If the setting is not specified then default throttle of 1.0 sec will be used.
  "heartbeat"  "15"  // Even if no game state change occurs, this setting instructs the game to send a request so many seconds after receiving previous HTTP 2XX response. The service can be configured to consider game as offline or disconnected if it didn't get a notification for a significant period of time exceeding the heartbeat interval.

  "data"
  {
    "provider"                "1" // general info about client being listened to: game name, appid, client steamid, etc
    "map"                     "1" // map, gamemode, and current match phase ('warmup', 'intermission', 'gameover', 'live') and current score
    "round"                   "1" // round phase ('freezetime', 'over', 'live'), bomb state ('planted', 'exploded', 'defused'), and round winner (if any)
    "player_id"               "1" // player name, clan tag, observer slot (ie key to press to observe this player) and team
    "allplayers_id"           "1" // Same as 'player_id' but for all players. 'allplayers' versions are only valid for HLTV and observers
    "player_state"            "1" // player state for this current round such as health, armor, kills this round, etc.
    "allplayers_state"        "1" // the player_state for each player
    "allplayers_match_stats"  "1" // the scoreboard info for each player
    "allplayers_weapons"      "1" // the player_weapons for each player
    "allplayers_position"     "1" // player_position but for each player
    "phase_countdowns"        "1" // countdowns of each second remaining for game phases, eg round time left, time until bomb explode, freezetime. Only valid for GOTV or spectators.
    "allgrenades"             "1" // output information about all grenades and inferno flames in the world, only valid for GOTV or spectators.
    "player_position"         "1" // forward direction, position for currently spectated player
    "bomb"                    "1" // location of the bomb, who is carrying it, dropped or not
  }
}